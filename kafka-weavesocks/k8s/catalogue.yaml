---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogue
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: catalogue
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: catalogue
    spec:
      containers:
      - image: weaveworksdemos/catalogue:0.3.5
        imagePullPolicy: IfNotPresent
        name: catalogue
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogue-db
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: catalogue-db
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: catalogue-db
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: ${MYSQL_ROOT_PASSWORD}
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          value: 'true'
        - name: MYSQL_DATABASE
          value: socksdb
        image: weaveworksdemos/catalogue-db:0.3.0
        imagePullPolicy: IfNotPresent
        name: catalogue-db
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: catalogue-db
  name: catalogue-db
spec:
  ports:
  - port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    name: catalogue-db
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: catalogue
  name: catalogue
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    name: catalogue
  sessionAffinity: None
  type: ClusterIP